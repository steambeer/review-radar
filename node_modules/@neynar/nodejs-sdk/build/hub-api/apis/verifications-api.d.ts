/**
 * Farcaster Hub API
 * Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.35.0
 * Contact: team@neynar.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { FetchVerificationsByFid200Response } from '../models';
/**
 * VerificationsApi - axios parameter creator
 * @export
 */
export declare const VerificationsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Fetch verifications provided by a user.
     * @summary Provided by an FID
     * @param {number} fid The FID being requested
     * @param {string} [address] The optional ETH address to filter by
     * @param {number} [pageSize] Maximum number of messages to return in a single response
     * @param {boolean} [reverse] Reverse the sort order, returning latest messages first
     * @param {string} [pageToken] The page token returned by the previous query, to fetch the next page. If this parameter is empty, fetch the first page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @returns {Promise<FetchVerificationsByFid200Response>} A promise that resolves to a `FetchVerificationsByFid200Response` object
     *
     * For more information, refer to the [API documentation](https://docs.neynar.com/reference/fetch-verifications-by-fid)
     *
     */
    fetchVerificationsByFid: (fid: number, address?: string, pageSize?: number, reverse?: boolean, pageToken?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * VerificationsApi - functional programming interface
 * @export
 */
export declare const VerificationsApiFp: (configuration?: Configuration) => {
    /**
     * Fetch verifications provided by a user.
     * @summary Provided by an FID
     * @param {number} fid The FID being requested
     * @param {string} [address] The optional ETH address to filter by
     * @param {number} [pageSize] Maximum number of messages to return in a single response
     * @param {boolean} [reverse] Reverse the sort order, returning latest messages first
     * @param {string} [pageToken] The page token returned by the previous query, to fetch the next page. If this parameter is empty, fetch the first page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @returns {Promise<FetchVerificationsByFid200Response>} A promise that resolves to a `FetchVerificationsByFid200Response` object
     *
     * For more information, refer to the [API documentation](https://docs.neynar.com/reference/fetch-verifications-by-fid)
     *
     */
    fetchVerificationsByFid(fid: number, address?: string, pageSize?: number, reverse?: boolean, pageToken?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FetchVerificationsByFid200Response>>;
};
/**
 * VerificationsApi - factory interface
 * @export
 */
export declare const VerificationsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Fetch verifications provided by a user.
     * @summary Provided by an FID
     * @param {VerificationsApiFetchVerificationsByFidRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @returns {Promise<FetchVerificationsByFid200Response>} A promise that resolves to a `FetchVerificationsByFid200Response` object
     *
     * For more information, refer to the [API documentation](https://docs.neynar.com/reference/fetch-verifications-by-fid)
     *
     */
    fetchVerificationsByFid(requestParameters: VerificationsApiFetchVerificationsByFidRequest, options?: RawAxiosRequestConfig): AxiosPromise<FetchVerificationsByFid200Response>;
};
/**
 * VerificationsApi - interface
 * @export
 * @interface VerificationsApi
 */
export interface VerificationsApiInterface {
    /**
     * Fetch verifications provided by a user.
     * @summary Provided by an FID
     * @param {VerificationsApiFetchVerificationsByFidRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VerificationsApiInterface
     * @returns {Promise<FetchVerificationsByFid200Response>} A promise that resolves to a `FetchVerificationsByFid200Response` object
     *
     * For more information, refer to the [API documentation](https://docs.neynar.com/reference/fetch-verifications-by-fid)
     *
     */
    fetchVerificationsByFid(requestParameters: VerificationsApiFetchVerificationsByFidRequest, options?: RawAxiosRequestConfig): AxiosPromise<FetchVerificationsByFid200Response>;
}
/**
 * Request parameters for fetchVerificationsByFid operation in VerificationsApi.
 * @export
 * @interface VerificationsApiFetchVerificationsByFidRequest
 */
export interface VerificationsApiFetchVerificationsByFidRequest {
    /**
     * The FID being requested
     *
     *
     *
     * @type {number}
     * @memberof VerificationsApiFetchVerificationsByFid
     */
    readonly fid: number;
    /**
     * The optional ETH address to filter by
     *
     *
     *
     * @type {string}
     * @memberof VerificationsApiFetchVerificationsByFid
     */
    readonly address?: string;
    /**
     * Maximum number of messages to return in a single response
     *
     *
     *
     * @type {number}
     * @memberof VerificationsApiFetchVerificationsByFid
     */
    readonly pageSize?: number;
    /**
     * Reverse the sort order, returning latest messages first
     *
     *
     *
     * @type {boolean}
     * @memberof VerificationsApiFetchVerificationsByFid
     */
    readonly reverse?: boolean;
    /**
     * The page token returned by the previous query, to fetch the next page. If this parameter is empty, fetch the first page
     *
     *
     *
     * @type {string}
     * @memberof VerificationsApiFetchVerificationsByFid
     */
    readonly pageToken?: string;
}
/**
 * VerificationsApi - object-oriented interface
 * @export
 * @class VerificationsApi
 * @extends {BaseAPI}
 */
export declare class VerificationsApi extends BaseAPI implements VerificationsApiInterface {
    /**
     * Fetch verifications provided by a user.
     * @summary Provided by an FID
     * @param {VerificationsApiFetchVerificationsByFidRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VerificationsApi
     * @returns {Promise<FetchVerificationsByFid200Response>} A promise that resolves to a `FetchVerificationsByFid200Response` object
     *
     * For more information, refer to the [API documentation](https://docs.neynar.com/reference/fetch-verifications-by-fid)
     *
     */
    fetchVerificationsByFid(requestParameters: VerificationsApiFetchVerificationsByFidRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FetchVerificationsByFid200Response, any>>;
}
