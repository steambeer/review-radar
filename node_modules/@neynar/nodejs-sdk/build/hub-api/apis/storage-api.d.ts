/**
 * Farcaster Hub API
 * Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.35.0
 * Contact: team@neynar.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { StorageLimitsResponse } from '../models';
/**
 * StorageApi - axios parameter creator
 * @export
 */
export declare const StorageApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Fetch a user\'s storage limits.
     * @summary FID\'s limits
     * @param {number} fid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @returns {Promise<StorageLimitsResponse>} A promise that resolves to a `StorageLimitsResponse` object
     *
     * For more information, refer to the [API documentation](https://docs.neynar.com/reference/lookup-user-storage-limit)
     *
     */
    lookupUserStorageLimit: (fid: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * StorageApi - functional programming interface
 * @export
 */
export declare const StorageApiFp: (configuration?: Configuration) => {
    /**
     * Fetch a user\'s storage limits.
     * @summary FID\'s limits
     * @param {number} fid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @returns {Promise<StorageLimitsResponse>} A promise that resolves to a `StorageLimitsResponse` object
     *
     * For more information, refer to the [API documentation](https://docs.neynar.com/reference/lookup-user-storage-limit)
     *
     */
    lookupUserStorageLimit(fid: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StorageLimitsResponse>>;
};
/**
 * StorageApi - factory interface
 * @export
 */
export declare const StorageApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Fetch a user\'s storage limits.
     * @summary FID\'s limits
     * @param {StorageApiLookupUserStorageLimitRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @returns {Promise<StorageLimitsResponse>} A promise that resolves to a `StorageLimitsResponse` object
     *
     * For more information, refer to the [API documentation](https://docs.neynar.com/reference/lookup-user-storage-limit)
     *
     */
    lookupUserStorageLimit(requestParameters: StorageApiLookupUserStorageLimitRequest, options?: RawAxiosRequestConfig): AxiosPromise<StorageLimitsResponse>;
};
/**
 * StorageApi - interface
 * @export
 * @interface StorageApi
 */
export interface StorageApiInterface {
    /**
     * Fetch a user\'s storage limits.
     * @summary FID\'s limits
     * @param {StorageApiLookupUserStorageLimitRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StorageApiInterface
     * @returns {Promise<StorageLimitsResponse>} A promise that resolves to a `StorageLimitsResponse` object
     *
     * For more information, refer to the [API documentation](https://docs.neynar.com/reference/lookup-user-storage-limit)
     *
     */
    lookupUserStorageLimit(requestParameters: StorageApiLookupUserStorageLimitRequest, options?: RawAxiosRequestConfig): AxiosPromise<StorageLimitsResponse>;
}
/**
 * Request parameters for lookupUserStorageLimit operation in StorageApi.
 * @export
 * @interface StorageApiLookupUserStorageLimitRequest
 */
export interface StorageApiLookupUserStorageLimitRequest {
    /**
     *
     *
     *
     *
     * @type {number}
     * @memberof StorageApiLookupUserStorageLimit
     */
    readonly fid: number;
}
/**
 * StorageApi - object-oriented interface
 * @export
 * @class StorageApi
 * @extends {BaseAPI}
 */
export declare class StorageApi extends BaseAPI implements StorageApiInterface {
    /**
     * Fetch a user\'s storage limits.
     * @summary FID\'s limits
     * @param {StorageApiLookupUserStorageLimitRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StorageApi
     * @returns {Promise<StorageLimitsResponse>} A promise that resolves to a `StorageLimitsResponse` object
     *
     * For more information, refer to the [API documentation](https://docs.neynar.com/reference/lookup-user-storage-limit)
     *
     */
    lookupUserStorageLimit(requestParameters: StorageApiLookupUserStorageLimitRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<StorageLimitsResponse, any>>;
}
