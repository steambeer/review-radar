/**
 * Neynar API
 * The Neynar API allows you to interact with the Farcaster protocol among other things. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 3.26.0
 * Contact: team@neynar.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { NonceResponse } from '../models';
/**
 * LoginApi - axios parameter creator
 * @export
 */
export declare const LoginApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Nonce to sign a message
     * @summary Fetch nonce
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @returns {Promise<NonceResponse>} A promise that resolves to a `NonceResponse` object
     *
     * For more information, refer to the [API documentation](https://docs.neynar.com/reference/fetch-nonce)
     *
     */
    fetchNonce: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * LoginApi - functional programming interface
 * @export
 */
export declare const LoginApiFp: (configuration?: Configuration) => {
    /**
     * Nonce to sign a message
     * @summary Fetch nonce
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @returns {Promise<NonceResponse>} A promise that resolves to a `NonceResponse` object
     *
     * For more information, refer to the [API documentation](https://docs.neynar.com/reference/fetch-nonce)
     *
     */
    fetchNonce(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NonceResponse>>;
};
/**
 * LoginApi - factory interface
 * @export
 */
export declare const LoginApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Nonce to sign a message
     * @summary Fetch nonce
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @returns {Promise<NonceResponse>} A promise that resolves to a `NonceResponse` object
     *
     * For more information, refer to the [API documentation](https://docs.neynar.com/reference/fetch-nonce)
     *
     */
    fetchNonce(options?: RawAxiosRequestConfig): AxiosPromise<NonceResponse>;
};
/**
 * LoginApi - interface
 * @export
 * @interface LoginApi
 */
export interface LoginApiInterface {
    /**
     * Nonce to sign a message
     * @summary Fetch nonce
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LoginApiInterface
     * @returns {Promise<NonceResponse>} A promise that resolves to a `NonceResponse` object
     *
     * For more information, refer to the [API documentation](https://docs.neynar.com/reference/fetch-nonce)
     *
     */
    fetchNonce(options?: RawAxiosRequestConfig): AxiosPromise<NonceResponse>;
}
/**
 * LoginApi - object-oriented interface
 * @export
 * @class LoginApi
 * @extends {BaseAPI}
 */
export declare class LoginApi extends BaseAPI implements LoginApiInterface {
    /**
     * Nonce to sign a message
     * @summary Fetch nonce
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LoginApi
     * @returns {Promise<NonceResponse>} A promise that resolves to a `NonceResponse` object
     *
     * For more information, refer to the [API documentation](https://docs.neynar.com/reference/fetch-nonce)
     *
     */
    fetchNonce(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<NonceResponse, any>>;
}
